<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.onedatatech.bs_hdc.main_mapper">
    <insert id="trainerSave" parameterType="hashmap" useGeneratedKeys="true" keyProperty="idx">
        INSERT INTO pt_trainers(id,last_access) VALUES (#{id},now())
   </insert>


    <insert id="trainerAuthenticate" parameterType="hashmap">
        INSERT INTO
            pt_trainer_authentication(
            idx,
            cert_type,
            password
        )
        VALUES
            (
                #{idx},
                #{certType},
                #{password}
            )
    </insert>


    <insert id="trainerInfoSave" parameterType="hashmap">
        INSERT INTO
            pt_trainer_info_basic(
                pt_trainer_idx,
                pt_trainer_name,
                affilated_center,
                approval_status,
                birth_day,
                el_das,
                gender,
                nick_name,
                phone_number,
                registered_date,
                approved_date
        )
        VALUES
            (
                #{idx},
                #{ptTrainerName},
                #{affilatedCenter},
                #{approvalstatus},
                #{brithDay},
                #{elDas},
                #{gender},
                #{nickName},
                #{phoneNumber},
                 now(),
                 now()

            )
    </insert>


    <insert id="trainerInfoDetailSave" parameterType="hashmap">
        INSERT INTO
            pt_trainer_info_details(
            pt_trainer_idx,
            award_winning,
            introduction,
            qualification,
            work_experience,
            specialty
        )
        VALUES
            (
                #{tarinerIdx},
                #{awardWinning},
                #{introduction},
                #{qualification},
                #{workExperience},
                #{specialty}
            )
    </insert>


    <insert id="trainerWorkExperienceSave"  useGeneratedKeys="true" keyProperty="idx"  parameterType="hashmap">
        INSERT INTO
        pt_trainer_work_experience(
            pt_trainer_idx,
            start,
            end,
            role,
            organization
        )
        VALUES
            (
                #{tarinerIdx},
                #{startDate},
                #{endDate},
                #{role},
                #{organization}
                )
    </insert>

    <insert id="trainerAwardWinningSave" useGeneratedKeys="true" keyProperty="idx" parameterType="hashmap">
        INSERT INTO
        pt_trainer_award_winning(
        pt_trainer_idx,
        competition,
        participation,
        year,
        award_winning
        )
        VALUES(
            #{tarinerIdx},
            #{competition},
            #{participation},
            #{year},
            #{awardWinning})
    </insert>

    <insert id="trainerQualitificationSave" useGeneratedKeys="true" keyProperty="idx" parameterType="hashmap">
        INSERT INTO
        pt_trainer_qualitification(
        pt_trainer_idx,
        license_name,
        organization,
        issued_date
        )
        VALUES
            (
            #{tarinerIdx},
            #{licenseName},
            #{issuedOrganization},
            DATE_FORMAT(#{issuedDate}, '%y%m%d')
            )
    </insert>

    <insert id="centerApprovedSave" parameterType="HashMap">
        INSERT INTO
        pt_trainer_center_approved(
        pt_trainer_idx,
        affilated_center,
        approval_status,
        approval_date,
        notice,
                                   targer_idx
        )
        VALUES
        (
            #{trainerIdx},
            #{affiliateCenter},
            #{approvalStatus},
            now(),
            #{notice},
            #{targerIdx}
        )
    </insert>


    <select id="selectInformation" resultType="java.util.HashMap">
        select
            pt.id,
            pt.last_access,
            auth.cert_type,
            info.pt_trainer_name,
            info.affilated_center,
            info.nick_name,
            info.phone_number,
            sib.store_name
        from pt_trainers pt
                 left join pt_trainer_authentication auth on auth.idx = pt.idx
                 left join pt_trainer_info_basic info on info.pt_trainer_idx = pt.idx
                 left join stores st on st.idx = info.affilated_center
                 left join stores_info_basic sib on st.idx = sib.store_idx
        where
            pt.idx  = #{idx};
    </select>


    <select id="selectDetailInformation" resultType="java.util.HashMap">
        select
           *
        from pt_trainer_info_details
        where
            pt_trainer_idx  = #{idx};
    </select>

    <select id="findEmail" resultType="java.util.HashMap">
        select
            *
        from users
        where
            id  = #{username}
    </select>

    <update id="updateInformation" parameterType="hashmap">
        UPDATE pt_trainer_info_basic
            left join pt_trainers pt on pt.idx = pt_trainer_info_basic.pt_trainer_idx
            left join pt_trainer_authentication auth on auth.idx = pt.idx
            left join pt_trainer_info_basic info on info.pt_trainer_idx = pt.idx
            left join stores st on st.idx = info.affilated_center
            left join stores_info_basic sib on st.idx = sib.store_idx
            SET info.pt_trainer_name = #{ptTrainerName},
            info.nick_name = #{nickName}
        WHERE  pt.idx  = #{idx}
    </update>




    <update id="updatePassword" parameterType="hashmap">
        UPDATE pt_trainer_authentication
        SET password = #{password}
        WHERE  idx  = #{idx}
    </update>


    <insert id="buyInformationSave" parameterType="java.util.List">
        INSERT INTO
        pt_trainer_buy_information(
        pt_trainer_idx,
        notice
        )
        VALUES
        <foreach item="item" separator=" , " collection="list">
            (
            #{item.idx},
            #{item.notice}
            )
        </foreach>
    </insert>


    <insert id="feeInformationSave" useGeneratedKeys="true" keyProperty="idx"  parameterType="hashmap">
        INSERT INTO
            pt_fee_information(
            pt_trainer_idx,
            separate_paymentYN,
            notice,
            round_time
        )
        VALUES
            (
                #{idx},
                #{separatePaymentYN},
                #{notice},
                #{roundTime}
            )
    </insert>


    <insert id="usePriceSave" useGeneratedKeys="true" keyProperty="idx"  parameterType="java.util.List">
        INSERT INTO
        pt_use_price(
        pt_fee_information_idx,
        title,
        round
        )
        VALUES
        <foreach item="item" separator=" , " collection="list">
            (
            ${item.idx},
            #{item.title},
            #{item.round}
            )
        </foreach>
    </insert>

    <insert id="usePriceDetailSave" parameterType="java.util.List">
        INSERT INTO
        pt_use_price_detail(
        use_price_idx,
        amount,
                            round
        )
        VALUES
        <foreach item="item" separator=" , " collection="list">
            (
            ${item.idx},
            #{item.amount},
            #{item.round}
            )
        </foreach>
    </insert>


    <insert id="oneDayAmountSave" parameterType="hashmap">
        INSERT INTO
            product(
            name,
            product_type,
            price,
            discount,
            registered_date,
            discount_price,
            ongoing_sales,
            description,
            seller_idx
        )
        VALUES
            (
                #{name},
                #{productType},
                #{price},
                #{discountRate},
                now(),
                #{discountPrice},
                1,
                #{description},
                1
            )
    </insert>


    <select id="oneDayAmountSelect" resultType="java.util.HashMap">
        select *
        from pt_fee_information
            left join pt_use_price pup on pt_fee_information.idx = pup.pt_fee_information_idx
            left join pt_use_price_detail pupd on pup.idx = pupd.use_price_idx
        where pt_trainer_idx = #{idx};
    </select>


    <insert id="trainerProfileSave" parameterType="java.util.List">
        INSERT INTO
        pt_trainer_images(
        pt_trainer_idx,
        image_file_name,
        image_path,
        image_type,
        award_winning_iseq,
        work_exprience_iseq,
        qualitification_iseq
        )
        VALUES
        <foreach item="item" separator=" , " collection="list">
            (
            #{item.trainerIdx},
            #{item.filename},
            #{item.fileurl},
            #{item.imagetype},
            #{item.awardWinningIseq},
            #{item.workExprienceIseq},
            #{item.qualitificationIseq}
            )
        </foreach>
    </insert>


    <select id="selectTrainerImages" resultType="java.util.HashMap">
        select
            *
        from pt_trainer_images
        where
            pt_trainer_idx  = #{idx};
    </select>


    <delete id="deleteImage">
        delete from pt_trainer_images where iseq = #{iseq}
    </delete>
    <delete id="deleteWork">
        delete from pt_trainer_work_experience where idx = #{workExprienceIseq}
    </delete>
    <delete id="deleteAward">
        delete from pt_trainer_award_winning where idx = #{awardWinningIseq}
    </delete>
    <delete id="deleteQuailtification">
        delete from pt_trainer_qualitification where idx = #{qualitificationIseq}
    </delete>


    <insert id="trainerScheduleSave" useGeneratedKeys="true" keyProperty="idx"   parameterType="java.util.HashMap">
        INSERT INTO
        pt_trainers_pt_schedule(
                                  start_ampm
                                  ,end_ampm
                                , confirmed
                                , confirmed_date
                                , lesson_date
                                , lesson_start_time
                                , lesson_end_time
                                , lesson_start_minute
                                , lesson_end_minute
                                , pttrainer_idx
                                , user_idx
                                )
        VALUES
            (
            #{startAmPm},
            #{endAmPm},
            #{confirmed},
            #{confirmedDate},
            #{lessionDate},
            #{lessonStartTime},
            #{lessonEndTime},
            #{lessonStartMinute},
            #{lessonEndMinute},
            #{tarinerIdx},
            #{userIdx},
            #{productIdx}
            )
    </insert>

    <update id="updateSchedule" parameterType="hashmap">
        UPDATE pt_trainers_pt_schedule
            SET start_ampm = #{startAmPm} , end_ampm = #{endAmPm} , lesson_start_time = #{lessonStartTime} ,
                lesson_end_time = #{lessonEndTime} ,
                lesson_start_minute = #{lessonStartMinute} ,
                lesson_end_minute = #{lessonEndMinute}

        WHERE pttrainer_idx  = #{tarinerIdx} and
            user_idx  = #{userIdx} and
            lesson_date  = #{lessionDate}
    </update>
    <insert id="trainerLessionSave" parameterType="java.util.HashMap">
        insert into pt_trainer_pt_users
            (
                approved_date
            , date_end
            , date_start
            , pt_trainer_idx
            , user_approved
            , user_idx
            , voucher
            , product_idx
            ) values (
                     #{approvedDate},
                     #{dateEnd},
                     #{dateStart},
                     #{tarinerIdx},
                     #{userApproved},
                     #{userIdx},
                     #{voucher},
                     #{productIdx}
                 )
    </insert>

    <insert id="trainerMessageSave" parameterType="java.util.HashMap">
        insert into messages(
            content,
            received_date_time,
            receiver_idx,
            receiver_type,
            send_date_time,
            sender_idx,
            sender_type,
            title,
            typeIdx,
            message_type
            )
        values (
                #{content},
                null,
                #{receiverIdx},
                #{receiverType},
                now(),
                #{senderIdx},
                #{senderType},
                #{title},
                #{typeIdx},
                #{messageType}
               )
    </insert>


    <insert id="userPtRecordSave" useGeneratedKeys="true" keyProperty="idx"  parameterType="java.util.HashMap">
        insert into users_pt_records(
                                     date,
                                     end_time,
                                     exercise_count,
                                     pt_trainer_idx,
                                     recorded_by,
                                     start_time,
                                     user_idx,
                                     exercise_category
                                     )
        values (
                #{date},
                #{endTime},
                #{exerciseCount},
                #{tarinerIdx},
                #{recordedBy},
                #{startTime},
                #{userIdx},
                1
               )
    </insert>

    <select id="userPtRecordSelect" parameterType="java.util.HashMap">
        select exerciseType,exerciseDetails,exerciseName from users_pt_records
                          left join users u on users_pt_records.user_idx = u.idx
                          left join pt_trainers on users_pt_records.pt_trainer_idx = pt_trainers.idx
                          left join user_pt_contents upc on users_pt_records.idx = upc.record_idx
            where ptr.pt_trainer_idx  = #{tarinerIdx} and
            ptr.user_idx  = #{userIdx} and
            ptr.date  = #{date}
    </select>

    <insert id="userPtContentSave" useGeneratedKeys="true" keyProperty="idx"  parameterType="java.util.HashMap">
        insert into user_pt_contents(
                                     record_idx,
                                     exercise_type,
                                     exercise_details,
                                     exercise_name)
        values (
                   #{recordIdx},
                   #{exerciseType},
                   #{exerciseDetails},
                   #{exerciseName}
               )
    </insert>

    <update id="updateRecords" parameterType="hashmap">
        UPDATE users_pt_records ptr
            left join user_pt_contents ptc on ptc.record_idx = ptr.idx
        SET ptc.exercise_name = #{exerciseName} ,
            ptc.exercise_details = #{exerciseDetails} ,
            ptc.exercise_type = #{exerciseType}
        WHERE ptr.pt_trainer_idx  = #{tarinerIdx} and
            ptr.user_idx  = #{userIdx} and
            ptr.date  = #{date}
    </update>

    <select id="selectTime" resultType="java.util.HashMap">
        select
            *
        from pt_trainers_pt_schedule
        where
            pttrainer_idx  = #{tarinerIdx} and
            user_idx  = #{userIdx} and
            lesson_date  = #{date}
    </select>


    <select id="findUser" resultType="java.util.HashMap">
        select
            pt.id,
            pt.idx,
            auth.password
        from pt_trainers pt
                 left join pt_trainer_authentication auth on auth.idx = pt.idx
        where
            pt.id  = #{userName};
    </select>

    <select id="transactionSelect" resultType="java.util.HashMap">
        select p.name,
               td.transaction_idx
               td.product_idx
        from transactions t
                 left join transactions_details td on t.idx = td.transaction_idx
                 left join product p on p.idx = td.product_idx
                 left join transactions_cancel_reason tcr on tcr.transaction_idx = t.idx
        where
            t.consumer_idx  = #{userIdx} and
            td.seller_idx = #{trainerIdx} and
            td.product_category = #{productCategory} and
                t.idx not IN(select tcr.iseq
                             from transactions t
                                      RIGHT join transactions_cancel_reason tcr on tcr.transaction_idx = t.idx
            )
    </select>

    <select id="approveFind" resultType="java.util.HashMap">
        select (case when ptcaas.status = '승인대기' then '1' else '2' end) as flag
        from (
                 select approval_status as status
                 from pt_trainer_center_approved
                 where notice = #{notice} and pt_trainer_idx = #{trainerIdx}
             ) as ptcaas;
    </select>

    <select id="workExperienceFind" resultType="java.util.HashMap">
    select * from pt_trainer_work_experience where pt_trainer_idx = #{trainerIdx};
    </select>

    <select id="AwardWinningFind" resultType="java.util.HashMap">
    select * from pt_trainer_award_winning where pt_trainer_idx = #{trainerIdx};
    </select>

    <select id="qualitificationFind" resultType="java.util.HashMap">
    select * from pt_trainer_qualitification where pt_trainer_idx = #{trainerIdx};
    </select>

</mapper>