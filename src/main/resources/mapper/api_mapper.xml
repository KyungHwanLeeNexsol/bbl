<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.onedatatech.bs_hdc.main_mapper">
    <select id="select_now_api" resultType="java.util.HashMap">
        select now() as now;
    </select>

    <select id="getPTLessionVouchars" resultType="java.util.HashMap">
        select
            p.idx,
            p.name,
            p.product_type as productType,
            p.price,
            p.discount,
            p.store_idx as storeIdx,
            s.store_name as storeName,
            p.seller_idx as sellerIdx,
            t.pt_trainer_name as sellerName,
            s.address,
            (select avg(user_satisfaction) from users_notes as un where p.idx = un.note_target) as userSatisfaction
        from
            product as p
        left join
            pt_trainer_info_basic as t
        on
            p.seller_idx = t.pt_trainer_idx
        left join
                stores_info_basic as s
        on
            p.store_idx = s.store_idx OR t.affilated_center = s.store_idx
    </select>

    <select id="getPTLessionVoucharsDetail" resultType="java.util.HashMap">
        select
            p.idx,
            p.name,
            p.product_type as productType,
            p.price,
            p.discount,
            p.description,
            p.store_idx as storeIdx,
            s.store_name as storeName,
            p.seller_idx as sellerIdx,
            t.pt_trainer_name as sellerName,
            p.registered_date as registeredDate,
            pv.voucher_type as voucherType,
            pv.use_termYN as useTermYN,
            pv.use_term as useTerm
        from
            product as p
        left join
            pt_trainer_info_basic as t
        on
            p.seller_idx = t.pt_trainer_idx
        left join
            stores_info_basic as s
        on
            p.store_idx = s.store_idx
        left join
            product_pt_voucher_details as pv
        on
            p.idx = pv.idx
        where
            p.idx = #{idx}
    </select>

    <select id="getPTTrainers" resultType="java.util.HashMap">
        select
            p.pt_trainer_idx as idx,
            p.pt_trainer_name as name,
            p.gender,
            p.affilated_center as affilatedCenterIdx,
            s.store_name as affilatedCenterName,
            ptid.profile_photo as profilePhoto,
            ptid.profile_photo_file_pass as profilePhotoFilepass
        from
            pt_trainer_info_basic as p
        left join
            stores_info_basic as s
        on
            p.affilated_center = s.store_idx
        left join
            pt_trainer_info_details as ptid
        on
            p.pt_trainer_idx = ptid.pt_trainer_idx
    </select>

    <select id="getPTTrainerDetail" resultType="java.util.HashMap">
        select
            p.pt_trainer_idx as idx,
            p.pt_trainer_name as name,
            p.gender,
            ROUND((TO_DAYS(NOW()) -  to_days(STR_TO_DATE(p.birth_day, '%Y%m%d'))) / 365 ) as age,
            p.affilated_center as affilatedCenterIdx,
            s.store_name as affilatedCenterName,
            ptid.profile_photo as profilePhoto,
            ptid.profile_photo_file_pass as profilePhotoFilepass,
            ptid.introduction
        from
            pt_trainer_info_basic as p
                left join
            stores_info_basic as s
            on
                p.affilated_center = s.store_idx
                left join
            pt_trainer_info_details as ptid
            on
                p.pt_trainer_idx = ptid.pt_trainer_idx
        where
            p.pt_trainer_idx = #{idx}
    </select>

    <select id="getPTTrainerDetail_workExperience" resultType="java.util.HashMap">
        select
            ptwe.start as startDate,
            ptwe.end as endDate,
            ptwe.organization,
            ptwe.role
        from
            pt_trainer_work_experience as ptwe
        where
            ptwe.pt_trainer_idx = #{idx}
    </select>

    <select id="getPTTrainerDetail_awardWinning" resultType="java.util.HashMap">
        select
            ptaw.year,
            ptaw.competition,
            ptaw.participation,
            ptaw.award_winning as awardWinning
        from
            pt_trainer_award_winning as ptaw
        where
            ptaw.pt_trainer_idx = #{idx}
    </select>

    <select id="getPTTrainerDetail_qualification" resultType="java.util.HashMap">
        select
            ptq.license_name as licenseName,
            ptq.organization as issuedOrganization,
            ptq.issued_date as issuedDate
        from
            pt_trainer_qualitification as ptq
        where
            ptq.idx = #{idx}
    </select>

    <select id="getShoppingItems" resultType="java.util.HashMap">
        select
            usb.product_category as category,
            usb.idx,
            usb.user_idx as userIdx,
            usb.quantity,
            usb.seleted_date as selectedDate,
            usb.product_idx as productIdx,
            p.name,
            p.price,
            p.store_idx as storeIdx,
            sib.store_name as storeName,
            p.seller_idx as sellerIdx,
            ptib.pt_trainer_name as sellerName
        from users_shopping_basket as usb
        left join product as p on usb.product_idx = p.idx
        left join stores_info_basic as sib on p.store_idx = sib.store_idx
        left join pt_trainer_info_basic as ptib on p.seller_idx = ptib.pt_trainer_idx
        where user_idx = #{userIdx}
    </select>

    <insert id="addShoppingItems">
        insert into users_shopping_basket (user_idx, product_idx, product_category, quantity)
        values (#{userIdx}, #{productIdx}, #{productCategory}, #{quantity})
    </insert>

    <delete id="deleteShoppingItems">
        delete from users_shopping_basket
        where idx = #{usersShoppingBasketIdx}
    </delete>

    <select id="getUserPick_Products" resultType="java.util.HashMap">
        select
            up.item_category as category, p.name, p.product_type as productType, p.price, p.discount,
            p.store_idx as storeIdx, sib.store_name as storeName, p.seller_idx as sellerIdx, ptib.pt_trainer_name as sellerName
        from
            users_pick as up
        left join
            product as p
        on
            up.picked_item = p.idx
        left join
            stores_info_basic as sib
        on
            p.store_idx = sib.store_idx
        left join
            pt_trainer_info_basic as ptib
        on
            p.seller_idx = ptib.pt_trainer_idx
        where
            up.user_idx = #{userIdx} AND up.item_category = #{category}
    </select>

    <select id="getUserPick_PTTrainers" resultType="java.util.HashMap">
        select
            up.item_category as category, ptib.pt_trainer_idx as idx,
            ptib.pt_trainer_name as name, ptib.gender, ptib.affilated_center as affilatedCenterIdx,
            sib.store_name as affilatedCenterName, ptid.profile_photo as profilePhoto,
            ptid.profile_photo_file_pass as profilePhotoFilepass
        from
            users_pick as up
        left join
            pt_trainer_info_basic as ptib
        on
            ptib.pt_trainer_idx = up.picked_item
        left join
            stores_info_basic as sib
        on
            ptib.affilated_center = sib.store_idx
        left join
            pt_trainer_info_details as ptid
        on
            ptib.pt_trainer_idx = ptid.pt_trainer_idx
        where
            up.user_idx = #{userIdx} AND up.item_category = #{category}
    </select>

    <select id="getUserPick_Stores" resultType="java.util.HashMap">
        select
            sib.store_idx as idx, sib.store_name as name, sib.main_telephone as mainTelephone,
            sib.address, fgsid.main_photo as mainPhoto
        from
            users_pick as up
        left join
            stores_info_basic as sib
        on
            up.picked_item = sib.store_idx
        left join
            fitness_gym_stores_info_details as fgsid
        on
            fgsid.store_idx = sib.store_idx
        where
            up.user_idx = #{userIdx} AND up.item_category = #{category}
    </select>

    <select id="getUsersPickDetail_Product" resultType="java.util.HashMap">
        select
            p.idx,
            p.name,
            p.product_type as productType,
            p.price,
            p.discount,
            p.description,
            p.store_idx as storeIdx,
            s.store_name as storeName,
            p.seller_idx as sellerIdx,
            t.pt_trainer_name as sellerName,
            p.registered_date as registeredDate,
            pv.voucher_type as voucherType,
            pv.use_termYN as useTermYN,
            pv.use_term as useTerm
        from
            product as p
        left join
            pt_trainer_info_basic as t
        on
            p.seller_idx = t.pt_trainer_idx
        left join
            stores_info_basic as s
        on
            p.store_idx = s.store_idx
        left join
            product_pt_voucher_details as pv
        on
            p.idx = pv.idx
        where
            p.idx = #{idx}
    </select>

    <select id="getUsersPickDetail_PTTrainer" resultType="java.util.HashMap">
        select
            p.pt_trainer_idx as idx,
            p.pt_trainer_name as name,
            p.gender,
            ROUND((TO_DAYS(NOW()) -  to_days(STR_TO_DATE(p.birth_day, '%Y%m%d'))) / 365 ) as age,
            p.affilated_center as affilatedCenterIdx,
            s.store_name as affilatedCenterName,
            ptid.profile_photo as profilePhoto,
            ptid.profile_photo_file_pass as profilePhotoFilepass,
            ptid.introduction
        from
            pt_trainer_info_basic as p
        left join
            stores_info_basic as s
        on
            p.affilated_center = s.store_idx
        left join
            pt_trainer_info_details as ptid
        on
            p.pt_trainer_idx = ptid.pt_trainer_idx
        where
            p.pt_trainer_idx = #{idx}
    </select>

    <select id="getUsersPickDetail_Store" resultType="java.util.HashMap">
        select
            sib.store_idx as idx, sib.store_name as name, sib.main_telephone as mainTelephone,
            sib.address, fgsid.main_photo as mainPhoto, fgsid.use_guide as useGuide, ifnull(fgsid.biz_hour, 0) as bizHour,
            fgsid.introduction, ifnull(fgsid.programs, 0) as programs
        from
            stores_info_basic as sib
        left join
            fitness_gym_stores_info_details as fgsid
        on
            fgsid.store_idx = sib.store_idx
        where
            sib.store_idx = #{idx}
    </select>

    <select id="getStoreBizHours" resultType="java.util.HashMap">
        select
            fgsbh.iseq as idx, fgsbh.store_idx as storeIdx, fgsbh.title,
            fgsbh.day_classification as dayClassification, fgsbh.open_time as openTime,
            fgsbh.close_time as closeTime
        from
            fitness_gym_stores_biz_hour as fgsbh
        where
            fgsbh.store_idx = #{idx}
    </select>

    <select id="getStorePrograms" resultType="java.util.HashMap">
        select
            fgsp.iseq as idx, fgsp.store_idx as storeIdx, fgsp.program_name as programName,
            fgsp.description, fgsp.charge
        from
            fitness_gym_stores_program as fgsp
        where
            fgsp.store_idx = #{idx}
    </select>

    <insert id="addUserPick">
        insert into users_pick (user_idx, item_category, picked_item)
        values (#{userIdx}, #{category}, #{pickItemIdx})
    </insert>

    <delete id="deleteUserPick">
        delete from users_pick
        where idx = #{usersPicksIdx}
    </delete>

    <insert id="insertTransaction">
        <selectKey resultType="int" keyProperty="transactionIdx" order="BEFORE">
            SELECT MAX(idx)+1 from transactions
        </selectKey>
        insert into
            transactions(consumer_idx, kind_of_items, total_amount, point_use, billing_amount, billing_method)
        values
        (#{userIdx}, #{kindOfItem}, #{totalAmount}, #{pointUse}, #{billingAmount}, #{billingMethod})
    </insert>

    <insert id="insertTransactionDetail">
        insert into
            transactions_details(transaction_idx, product_category, product_idx, price, quantity, amount, seller_idx, store_idx)
        values (#{transactionIdx}, #{productCategory}, #{productIdx}, #{price}, #{quantity}, #{amount}, #{sellerIdx, jdbcType=INTEGER}, #{storeIdx, jdbcType=INTEGER})
    </insert>

    <select id="getTransactions" resultType="java.util.HashMap">
        select
            t.idx as transactionIdx,
            p.idx as productIdx,
            p.name as productName,
            t.transaction_date as transactionDate,
            p.product_type as productType,
            p.seller_idx as sellerIdx,
            p.store_idx as storeIdx,
            t.billing_date as billingDate,
            t.billing_method as billingMethod
        from transactions as t
        left join
            transactions_details as td
        on
            t.idx = td.transaction_idx
        left join
            product as p
        on
            p.idx = td.product_idx
        where
            consumer_idx = #{userIdx}
    </select>

    <select id="getTransactionDetail" resultType="java.util.HashMap">
        select
            t.total_amount as totalAmount,
            t.point_use as pointUse,
            t.billing_amount as billingAmount,
            t.billing_method as billingMethod,
            t.kind_of_items as kindOfItems
        from
            transactions as t
        where
            t.idx = #{transactionIdx}
    </select>
</mapper>